Sujetos$Sujeto_24 <- filter(Sujetos$Sujeto_24, respuesta < 8)
Sujetos$Sujeto_3 <- NULL
Sujetos$Sujeto_2 <- NULL
Sujetos$Sujeto_4 <- NULL
Sujetos$Sujeto_13 <- NULL # Espacio Peripersonal
Sujetos$Sujeto_23 <- NULL # Ceguera Total
Sujetos$Sujeto_24 <- NULL # Espacio Peripersonal
View(Sujetos)
High <- tibble()
for (i in 1:22) {
nueva_data <-  filter(Sujetos[[i]], condicion == "high")
High <- rbind(High, nueva_data)
}
View(High)
View(Sujetos)
View(Sujetos)
View(Sujetos)
View(Sujetos[["Sujeto_1"]])
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto) %>%
mutate((condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High",
TRUE ~ as.character(condicion)
)))
Sujetos[[Sujeto]] <- nueva_lista
}
View(Sujetos)
View(Sujetos[["Sujeto_1"]])
View(Sujetos[["Sujeto_7"]])
View(Sujetos[["Sujeto_7"]])
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto) %>%
mutate((cond = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High"
)))
Sujetos[[Sujeto]] <- nueva_lista
}
View(Sujetos)
View(Sujetos[["Sujeto_1"]])
Sujetos <- list()
Directorio <- "~/Doctorado/Piloto_Mayo_2023/Data"
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto) %>%
mutate((condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High"
)))
Sujetos[[Sujeto]] <- nueva_lista
}
rm(nueva_lista, file_list, i, Sujeto)
Num_Sujeto <- 23 #Este es el numero de orden de los sujetos, no el ID
Sujetos$Sujeto_5 <- filter(Sujetos$Sujeto_5, respuesta < 20)
Sujetos$Sujeto_19 <- filter(Sujetos$Sujeto_19, respuesta > 0.2)
Sujetos$Sujeto_24 <- filter(Sujetos$Sujeto_24, respuesta < 8)
Sujetos$Sujeto_3 <- NULL
Sujetos$Sujeto_2 <- NULL
Sujetos$Sujeto_4 <- NULL
Sujetos$Sujeto_13 <- NULL # Espacio Peripersonal
Sujetos$Sujeto_23 <- NULL # Ceguera Total
Sujetos$Sujeto_24 <- NULL # Espacio Peripersonal
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
Grafica
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
Num_Sujeto <- 3 #Este es el numero de orden de los sujetos, no el ID
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
Grafica
Sujetos <- list()
Directorio <- "~/Doctorado/Piloto_Mayo_2023/Data"
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto)
Sujetos[[Sujeto]] <- nueva_lista
}
rm(nueva_lista, file_list, i, Sujeto)
rm(nueva_lista, file_list, i, Sujeto, Directorio)
Sujetos$Sujeto_5 <- filter(Sujetos$Sujeto_5, respuesta < 20)
Sujetos$Sujeto_19 <- filter(Sujetos$Sujeto_19, respuesta > 0.2)
Sujetos$Sujeto_24 <- filter(Sujetos$Sujeto_24, respuesta < 8)
Sujetos$Sujeto_3 <- NULL
Sujetos$Sujeto_2 <- NULL
Sujetos$Sujeto_4 <- NULL
Sujetos$Sujeto_13 <- NULL # Espacio Peripersonal
Sujetos$Sujeto_23 <- NULL # Ceguera Total
Sujetos$Sujeto_24 <- NULL # Espacio Peripersonal
Num_Sujeto <- 3 #Este es el numero de orden de los sujetos, no el ID
Sujetos[[Num_Sujeto]] <- Sujetos[[Num_Sujeto]] %>%
mutate(condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High",
TRUE ~ as.character(condicion)
))
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
Grafica
High <- tibble()
for (i in 1:22) {
nueva_data <-  filter(Sujetos[[i]], condicion == 2)
High <- rbind(High, nueva_data)
}
View(High)
High-High <- tibble()
for (i in 1:22) {
nueva_data <-  filter(Sujetos[[i]], condicion == 2)
High <- rbind(High, nueva_data)
}
High-High <- tibble()
# Cargamos las Librerias
library(readr)
library(dplyr)
library(here)
library(ggplot2)
# Cargamos los datos por csv y armarmos un csv por sujeto
# Recordar cargar el directorio de trabajo antes de continuar.
Sujetos <- list()
Directorio <- "~/Doctorado/Piloto_Mayo_2023/Data"
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto)
Sujetos[[Sujeto]] <- nueva_lista
}
rm(nueva_lista, file_list, i, Sujeto, Directorio)
#Eliminamos los Sujetos que presentan valores superiores a 150 e inferiores a 1 m en su mayoria
Sujetos$Sujeto_5 <- filter(Sujetos$Sujeto_5, respuesta < 20)
Sujetos$Sujeto_19 <- filter(Sujetos$Sujeto_19, respuesta > 0.2)
Sujetos$Sujeto_24 <- filter(Sujetos$Sujeto_24, respuesta < 8)
# Eliminamos Los Tibbles de sujetos que tiraron data muy lejana
Sujetos$Sujeto_3 <- NULL
Sujetos$Sujeto_2 <- NULL
Sujetos$Sujeto_4 <- NULL
Sujetos$Sujeto_13 <- NULL # Espacio Peripersonal
Sujetos$Sujeto_23 <- NULL # Ceguera Total
Sujetos$Sujeto_24 <- NULL # Espacio Peripersonal
#Reescribimos las columnas de conidicion para que digan los valores
Num_Sujeto <- 3 #Este es el numero de orden de los sujetos, no el ID
Sujetos[[Num_Sujeto]] <- Sujetos[[Num_Sujeto]] %>%
mutate(condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High",
TRUE ~ as.character(condicion)
))
# Graficamos todas las condiciones por sujeto modificando la ubicacion en la liste de tibbles
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
Grafica
######### ANALISIS POR CONDICIÃ“N ##########
Wide_Wide <- tibble()
Low_Low <- tibble()
High_High <- tibble()
High_Low <- tibble()
Low_High <- tibble()
for (i in 1:22) {
nueva_data <-  filter(Sujetos[[i]], condicion == 0)
Wide_Wide <- rbind(Wide_Wide, nueva_data)
}
View(High_High)
View(High_Low)
View(Low_High)
View(Low_Low)
View(Grafica)
View(nueva_data)
View(Sujetos)
View(Sujetos[["Sujeto_1"]])
for (i in 1:22) {
nueva_data <-  filter(Sujetos[[i]], condicion == 0)
Wide_Wide <- rbind(Wide_Wide, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 0)
Wide_Wide <- rbind(Wide_Wide, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 1)
Low_Low <- rbind(Low_Low, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 2)
High_High <- rbind(High_High, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 3)
High_Low <- rbind(High_Low, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 4)
Low_High <- rbind(Low_High, nueva_data)
}
View(High_High)
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = High-High)
theme_minimal()
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = High-High) +
theme_minimal()
Grafica
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = High-High) +
theme_minimal()
Grafica
View(High_High)
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = "High-High") +
theme_minimal()
Grafica
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
facet_grid(rows = vars(condicion)) +
labs(title = "High-High") +
theme_minimal()
Grafica
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
facet_grid(rows = vars(ID)) +
labs(title = "High-High") +
theme_minimal()
Grafica
Grafica <- ggplot(High_High, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "High-High") +
theme_minimal()
Grafica
for (Num_Sujeto in 1:21) {
Sujetos[[Num_Sujeto]] <- Sujetos[[Num_Sujeto]] %>%
mutate(condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High",
TRUE ~ as.character(condicion)
))
# Graficamos todas las condiciones por sujeto modificando la ubicacion en la liste de tibbles
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
ggsave(filename = paste0("Intra_All_", Num_Sujeto, ".png"), plot = Grafica, width = 6, height = 4, dpi = 300)
}
# Cargamos las Librerias
library(readr)
library(dplyr)
library(here)
library(ggplot2)
######### ANALISIS POR SUJETO ##########
# Cargamos los datos por csv y armarmos un csv por sujeto
# Recordar cargar el directorio de trabajo antes de continuar.
Sujetos <- list()
Directorio <- "~/Doctorado/Piloto_Mayo_2023/Data"
for (i in 1:27) {
Sujeto <- paste0("Sujeto_", i)
file_list <- list.files(path = Directorio,
pattern =  paste0("^S", i, "_.*\\.csv$"),
full.names = TRUE)
nueva_lista <- bind_rows(lapply(file_list, read_csv)) %>%
mutate(ID = Sujeto)
Sujetos[[Sujeto]] <- nueva_lista
}
rm(nueva_lista, file_list, i, Sujeto, Directorio)
#Eliminamos los Sujetos que presentan valores superiores a 150 e inferiores a 1 m en su mayoria
Sujetos$Sujeto_5 <- filter(Sujetos$Sujeto_5, respuesta < 20)
Sujetos$Sujeto_19 <- filter(Sujetos$Sujeto_19, respuesta > 0.2)
Sujetos$Sujeto_24 <- filter(Sujetos$Sujeto_24, respuesta < 8)
# Eliminamos Los Tibbles de sujetos que tiraron data muy lejana
Sujetos$Sujeto_3 <- NULL
Sujetos$Sujeto_2 <- NULL
Sujetos$Sujeto_4 <- NULL
Sujetos$Sujeto_13 <- NULL # Espacio Peripersonal
Sujetos$Sujeto_23 <- NULL # Ceguera Total
Sujetos$Sujeto_24 <- NULL # Espacio Peripersonal
#Reescribimos las columnas de conidicion para que digan los valores
for (Num_Sujeto in 1:21) {
Sujetos[[Num_Sujeto]] <- Sujetos[[Num_Sujeto]] %>%
mutate(condicion = case_when(
condicion == 0 ~ "Wide-Wide",
condicion == 1 ~ "Low-Low",
condicion == 2 ~ "High-High",
condicion == 3 ~ "High-Low",
condicion == 4 ~ "Low-High",
TRUE ~ as.character(condicion)
))
# Graficamos todas las condiciones por sujeto modificando la ubicacion en la liste de tibbles
Grafica <- ggplot(Sujetos[[Num_Sujeto]], aes(x=distancia,
y=respuesta,
color = condicion)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(condicion)) +
labs(title = Sujetos[[Num_Sujeto]]$ID)
theme_minimal()
ggsave(filename = paste0("Intra_All_", Num_Sujeto, ".png"), plot = Grafica, width = 6, height = 4, dpi = 300)
}
######### ANALISIS POR CONDICIÃ“N ##########
Wide_Wide <- tibble()
Low_Low <- tibble()
High_High <- tibble()
High_Low <- tibble()
Low_High <- tibble()
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 0)
Wide_Wide <- rbind(Wide_Wide, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 1)
Low_Low <- rbind(Low_Low, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 2)
High_High <- rbind(High_High, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 3)
High_Low <- rbind(High_Low, nueva_data)
}
for (i in 1:21) {
nueva_data <-  filter(Sujetos[[i]], condicion == 4)
Low_High <- rbind(Low_High, nueva_data)
}
## Grafica por CondiciÃ³n ##
## Wide - Wide ##
G_Wide_Wide_Sujeto <- ggplot(Wide_Wide, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Wide-Wide [Sujetos]") +
theme_minimal()
ggsave(filename = "G_Wide_Wide_Sujeto.png", plot = G_Wide_Wide_Sujeto, width = 6, height = 4, dpi = 300)
G_Wide_Wide_All <- ggplot(Wide_Wide, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Wide-Wide [All]") +
theme_minimal()
ggsave(filename = "G_Wide_Wide_All.png", plot = G_Wide_Wide_All, width = 6, height = 4, dpi = 300)
## Low - Low ##
G_Low_Low_Sujeto <- ggplot(Low_Low, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Low-Low [Sujetos]") +
theme_minimal()
ggsave(filename = "G_Low_Low_Sujeto.png", plot = G_Low_Low_Sujeto, width = 6, height = 4, dpi = 300)
G_Low_Low_All <- ggplot(Low_Low, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Low-Low [All]") +
theme_minimal()
ggsave(filename = "G_Low_Low_All.png", plot = G_Low_Low_All, width = 6, height = 4, dpi = 300)
## High - High ##
G_High_High_Sujeto <- ggplot(High_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "High-High") +
theme_minimal()
ggsave(filename = "G_High_High_Sujeto.png", plot = G_High_High_Sujeto, width = 6, height = 4, dpi = 300)
G_High_High_All <- ggplot(High_High, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "High-High") +
theme_minimal()
ggsave(filename = "G_High_High_All.png", plot = G_High_High_All, width = 6, height = 4, dpi = 300)
## High - Low ##
G_High_Low_Sujeto <- ggplot(High_Low, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "High-Low [Sujetos]") +
theme_minimal()
ggsave(filename = "G_High_Low_Sujeto.png", plot = G_High_Low_Sujeto, width = 6, height = 4, dpi = 300)
G_High_Low_All <- ggplot(High_Low, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "High-High [All]") +
theme_minimal()
ggsave(filename = "G_High_Low_All.png", plot = G_High_Low_All, width = 6, height = 4, dpi = 300)
## High - Low ##
G_Low_High_Sujeto <- ggplot(Low_High, aes(x=distancia,
y=respuesta,
color = ID)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Low-High [Sujetos]") +
theme_minimal()
ggsave(filename = "G_Low_High_Sujeto.png", plot = G_Low_High_Sujeto, width = 6, height = 4, dpi = 300)
G_Low_High_All <- ggplot(Low_High, aes(x=distancia,
y=respuesta)) +
geom_point() +
geom_smooth(se = FALSE) +
# facet_grid(rows = vars(ID)) +
labs(title = "Low-High [All]") +
theme_minimal()
ggsave(filename = "G_Low_High_All.png", plot = G_Low_High_All, width = 6, height = 4, dpi = 300)
